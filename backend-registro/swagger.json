{
  "openapi": "3.0.3",
  "info": {
    "title": "MathKids API",
    "description": "API do MathKids - Aplicativo de ensino de matemática para crianças de 3 a 9 anos.\n\nEsta API gerencia o sistema completo de autenticação de responsáveis, incluindo registro, login e redefinição de senhas.\n\n## ✅ Funcionalidades Implementadas\n- 👥 Registro de responsáveis/pais\n- 🔑 Sistema de login com tokens persistentes\n- 🔐 Redefinição de senha via email (Mailtrap)\n- 📧 Serviço de email integrado com fallback\n- 🛡️ Validação robusta e segurança avançada\n- 💾 PostgreSQL com tokens de autenticação\n- 🔍 Health checks para monitoramento\n\n## 🚀 Funcionalidades Futuras\n- 👶 Gestão de perfis de crianças\n- 🧮 Módulos educativos de matemática\n- 🏆 Sistema de progresso e recompensas\n- 📊 Relatórios de aprendizado\n\n## 📧 Sistema de Email\n- **Mailtrap**: Desenvolvimento e testes\n- **Ethereal**: Fallback automático\n- **Tokens seguros**: 64 chars hex, expiração automática\n- **Templates responsivos**: HTML + texto\n\n## 🔐 Segurança\n- Senhas hasheadas com bcrypt (10 rounds)\n- Tokens JWT para sessões persistentes\n- Rate limiting no Mailtrap\n- Validação em múltiplas camadas\n- Logout automático em reset de senha\n\n## 🧪 Como testar\n1. Acesse https://editor.swagger.io/\n2. Importe este arquivo JSON\n3. Use 'Try it out' para testar os endpoints\n4. Para reset: use `/api/forgot-password` → copie link do devInfo → teste `/api/reset-password`",
    "version": "2.0.0",
    "contact": {
      "name": "MathKids Team",
      "url": "https://github.com/abe-karin/mathkids",
      "email": "contato@mathkids.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "servers": [
    {
      "url": "https://mathkids-back.onrender.com",
      "description": "🌐 Servidor de Produção (Render)"
    },
    {
      "url": "http://localhost:5000",
      "description": "🏠 Servidor de desenvolvimento local (porta 5000)"
    },
    {
      "url": "http://localhost:3000",
      "description": "🏠 Servidor alternativo local (porta 3000)"
    }
  ],
  "tags": [
    {
      "name": "Autenticação",
      "description": "Endpoints para registro, login e redefinição de senha de responsáveis/pais"
    },
    {
      "name": "Sistema",
      "description": "Endpoints de monitoramento e health checks da API"
    },
    {
      "name": "Páginas",
      "description": "Rotas para servir páginas HTML do frontend"
    },
    {
      "name": "Educativo",
      "description": "Endpoints para módulos educativos (futuro)"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["Páginas"],
        "summary": "Página inicial - Bem-vindo ao Mundo Mágico",
        "description": "Serve a página principal de boas-vindas do MathKids com tema infantil",
        "responses": {
          "200": {
            "description": "Página inicial carregada com sucesso",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<!DOCTYPE html><html><head><title>Bem-vindo ao Mundo Mágico!</title>..."
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["Sistema"],
        "summary": "🏥 Verificação de saúde do servidor",
        "description": "Endpoint básico de health check para verificar se o servidor está funcionando corretamente",
        "responses": {
          "200": {
            "description": "✅ Servidor funcionando corretamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Servidor saudável",
                    "value": {
                      "status": "OK",
                      "timestamp": "2024-01-15T10:30:00.000Z",
                      "service": "MathKids API"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/database": {
      "get": {
        "tags": ["Sistema"],
        "summary": "🗄️ Verificação de conectividade com banco de dados",
        "description": "Verifica se a conexão com o banco de dados PostgreSQL está funcionando corretamente",
        "responses": {
          "200": {
            "description": "✅ Banco de dados conectado e funcionando",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Banco conectado com sucesso",
                    "value": {
                      "status": "OK",
                      "database": "connected",
                      "timestamp": "2024-01-15T10:30:00.000Z",
                      "query_time": "12ms"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "❌ Erro de conexão com o banco de dados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "database_error": {
                    "summary": "Falha na conexão com banco",
                    "value": {
                      "status": "ERROR",
                      "database": "disconnected",
                      "error": "Connection timeout",
                      "timestamp": "2024-01-15T10:30:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cadastro": {
      "get": {
        "tags": ["Páginas"],
        "summary": "Página de cadastro de responsáveis",
        "description": "Serve a página de cadastro para pais/responsáveis",
        "responses": {
          "200": {
            "description": "Página de cadastro carregada com sucesso",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<!DOCTYPE html><html><head><title>Cadastro - MathKids</title>..."
                }
              }
            }
          }
        }
      }
    },
    "/api/status": {
      "get": {
        "tags": ["Sistema"],
        "summary": "📊 Status completo da API",
        "description": "Retorna informações detalhadas sobre o status da API, incluindo endpoints disponíveis, banco de dados e serviço de email",
        "responses": {
          "200": {
            "description": "✅ Status da API obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiStatusResponse"
                },
                "examples": {
                  "api_online": {
                    "summary": "API funcionando completamente",
                    "value": {
                      "api": "MathKids API",
                      "status": "online",
                      "endpoints": {
                        "register": "/api/register",
                        "login": "/api/login",
                        "forgot_password": "/api/forgot-password",
                        "reset_password": "/api/reset-password",
                        "docs": "/api-docs",
                        "health": "/health"
                      },
                      "database": "connected",
                      "email_service": {
                        "provider": "mailtrap",
                        "isMailtrap": true,
                        "isTest": false,
                        "fromEmail": "noreply@mathkids.com",
                        "fromName": "MathKids - Educação Infantil",
                        "hasTransporter": true
                      },
                      "timestamp": "2025-10-01T17:30:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Registrar novo responsável/pai",
        "description": "Cria uma nova conta para responsável no sistema MathKids.\n\n### Validações Implementadas:\n- ✅ Todos os campos são obrigatórios\n- ✅ Email deve ser único no sistema\n- ✅ Senha é criptografada com bcrypt (10 rounds)\n- ✅ Termos devem ser aceitos (true)\n- ✅ Data de nascimento deve ser válida\n\n### Segurança:\n- 🔐 Senhas hasheadas com bcrypt\n- 🔒 Conexão SSL com PostgreSQL\n- 🛡️ Validação contra SQL injection\n- 📧 Verificação de email duplicado",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistroRequest"
              },
              "examples": {
                "exemplo_completo": {
                  "summary": "✅ Exemplo de registro completo e válido",
                  "value": {
                    "nomeDoResponsavel": "Maria Silva Santos",
                    "email": "maria.santos@email.com",
                    "senha": "minhasenhasegura123",
                    "dataDeNascimento": "1985-03-15",
                    "termosAceitos": true
                  }
                },
                "exemplo_minimo": {
                  "summary": "✅ Exemplo mínimo válido",
                  "value": {
                    "nomeDoResponsavel": "João",
                    "email": "joao@teste.com",
                    "senha": "123456",
                    "dataDeNascimento": "1990-01-01",
                    "termosAceitos": true
                  }
                },
                "exemplo_erro": {
                  "summary": "❌ Exemplo que gerará erro (email duplicado)",
                  "value": {
                    "nomeDoResponsavel": "Usuário Teste",
                    "email": "usuario@existente.com",
                    "senha": "senha123",
                    "dataDeNascimento": "1988-12-25",
                    "termosAceitos": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "✅ Usuário registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistroSucessoResponse"
                },
                "examples": {
                  "sucesso": {
                    "summary": "Registro bem-sucedido",
                    "value": {
                      "message": "Usuário registrado com sucesso!",
                      "user": {
                        "id": 42,
                        "email": "maria.santos@email.com",
                        "nome_responsavel": "Maria Silva Santos"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "❌ Dados inválidos ou campos obrigatórios ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "campos_obrigatorios": {
                    "summary": "Campos obrigatórios faltando",
                    "value": {
                      "message": "Erro: Todos os campos são obrigatórios, incluindo a aceitação dos termos."
                    }
                  },
                  "email_invalido": {
                    "summary": "Email com formato inválido",
                    "value": {
                      "message": "Erro: Email deve ter um formato válido."
                    }
                  },
                  "termos_nao_aceitos": {
                    "summary": "Termos não aceitos",
                    "value": {
                      "message": "Erro: É necessário aceitar os termos de uso."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "❌ Conflito - Email já está em uso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "email_duplicado": {
                    "summary": "Email já cadastrado no sistema",
                    "value": {
                      "message": "Erro: O e-mail fornecido já está em uso."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "❌ Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "erro_servidor": {
                    "summary": "Erro do servidor ou banco de dados",
                    "value": {
                      "message": "Erro interno do servidor ao tentar registrar o usuário."
                    }
                  },
                  "erro_banco": {
                    "summary": "Erro de conexão com banco",
                    "value": {
                      "message": "Erro de conexão com o banco de dados."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "🔑 Fazer login no sistema",
        "description": "Autentica um usuário registrado no sistema MathKids.\n\n### Credenciais de Teste:\n- **Admin:** `adm@email.com` / `123456`\n- **Usuário:** Use credenciais de um usuário registrado\n\n### Funcionalidades:\n- 🔐 Verificação de senha com bcrypt\n- 🔒 Autenticação segura\n- 💾 Opção de \"Lembrar-me\"\n- 🎯 Redirecionamento automático",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "admin_login": {
                  "summary": "👑 Login como Administrador",
                  "value": {
                    "email": "adm@email.com",
                    "senha": "123456",
                    "rememberMe": true
                  }
                },
                "user_login": {
                  "summary": "👤 Login de Usuário Normal",
                  "value": {
                    "email": "maria.santos@email.com",
                    "senha": "minhasenha123",
                    "rememberMe": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "✅ Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSucessoResponse"
                },
                "examples": {
                  "login_success": {
                    "summary": "Login bem-sucedido",
                    "value": {
                      "message": "Login realizado com sucesso!",
                      "user": {
                        "id": 1,
                        "email": "maria.santos@email.com",
                        "nome": "Maria Silva Santos",
                        "tipo": "usuario"
                      },
                      "token": "token_1_1642234567890",
                      "rememberMe": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "❌ Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "campos_obrigatorios": {
                    "summary": "Campos obrigatórios faltando",
                    "value": {
                      "message": "Erro: Email e senha são obrigatórios."
                    }
                  },
                  "email_invalido": {
                    "summary": "Formato de email inválido",
                    "value": {
                      "message": "Erro: Formato de email inválido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "❌ Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "credenciais_incorretas": {
                    "summary": "Email ou senha incorretos",
                    "value": {
                      "message": "Erro: Email ou senha incorretos."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "❌ Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "erro_servidor": {
                    "summary": "Erro do servidor",
                    "value": {
                      "message": "Erro interno do servidor ao tentar fazer login."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/forgot-password": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "🔐 Solicitar redefinição de senha",
        "description": "Solicita um link de redefinição de senha que será enviado por email via Mailtrap.\n\n### 🎯 Para testar o reset-password:\n1. **Execute este endpoint** com um email válido\n2. **Copie o token** do campo `devInfo.resetToken` na resposta\n3. **Use o token** no endpoint `/api/reset-password`\n4. **Ou** copie o link completo do `devInfo.resetLink`\n\n### Funcionalidades:\n- ✅ Verifica se email existe no sistema\n- ✅ Gera token seguro de reset (64 caracteres hex)\n- ✅ Token expira em 60 minutos (dev) / 15 minutos (prod)\n- ✅ Envia email via Mailtrap com link de reset\n- ✅ Fallback para Ethereal em caso de falha\n\n### Segurança:\n- 🔐 Token hasheado com bcrypt antes de salvar\n- ⏰ Expiração automática de tokens\n- 🛡️ Não revela se email existe (mesma resposta)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              },
              "examples": {
                "usuario_existente": {
                  "summary": "✅ Email válido e cadastrado",
                  "value": {
                    "email": "usuario@email.com"
                  }
                },
                "usuario_inexistente": {
                  "summary": "⚠️ Email não cadastrado (mesma resposta por segurança)",
                  "value": {
                    "email": "naoexiste@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "✅ Solicitação processada (sempre retorna sucesso por segurança)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                },
                "examples": {
                  "email_enviado": {
                    "summary": "✅ Email enviado - TOKEN DISPONÍVEL AQUI",
                    "description": "Copie o resetToken do devInfo para usar no /api/reset-password",
                    "value": {
                      "message": "Se este email estiver cadastrado, você receberá instruções para redefinir sua senha.",
                      "resetAvailable": true,
                      "emailSent": true,
                      "devInfo": {
                        "resetToken": "abc123def456...Token64CharsHex...789012345678901234567890abcdef123456",
                        "resetLink": "http://localhost:5000/cadastro/reset-password.html?token=abc123...&email=user%40email.com",
                        "testMode": true,
                        "provider": "mailtrap",
                        "instruction": "🎯 COPIE O resetToken ACIMA para usar no /api/reset-password"
                      }
                    }
                  },
                  "email_nao_encontrado": {
                    "summary": "Email não encontrado (mesma resposta)",
                    "value": {
                      "message": "Se este email estiver cadastrado, você receberá instruções para redefinir sua senha.",
                      "resetAvailable": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "❌ Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "email_obrigatorio": {
                    "summary": "Email não fornecido",
                    "value": {
                      "message": "Email é obrigatório"
                    }
                  },
                  "email_invalido": {
                    "summary": "Formato de email inválido",
                    "value": {
                      "message": "Formato de email inválido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "❌ Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reset-password": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "🔄 Redefinir senha com token",
        "description": "Redefine a senha do usuário usando o token recebido por email.\n\n### ⚠️ IMPORTANTE - Como testar:\n1. **Primeiro** execute `/api/forgot-password` com um email válido\n2. **Copie o token** dos logs do servidor ou do campo `devInfo.resetToken`\n3. **Use o token real** neste endpoint (não o exemplo abaixo)\n4. O token de exemplo abaixo **NÃO FUNCIONA** - é apenas ilustrativo\n\n### Validações:\n- ✅ Token deve ser válido e não expirado\n- ✅ Email deve corresponder ao token\n- ✅ Nova senha: 6-128 caracteres\n- ✅ Token é invalidado após uso\n- ✅ Logout em todos os dispositivos\n\n### Segurança:\n- 🔐 Token verificado com bcrypt\n- ⏰ Verificação de expiração\n- 🗑️ Token marcado como usado\n- 🚪 Revoga todas as sessões ativas",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              },
              "examples": {
                "reset_valido": {
                  "summary": "⚠️ EXEMPLO ILUSTRATIVO - Use token real do forgot-password",
                  "description": "Este é apenas um exemplo! Execute /api/forgot-password primeiro e use o token retornado.",
                  "value": {
                    "token": "SUBSTITUA_PELO_TOKEN_REAL_DO_FORGOT_PASSWORD_64_CHARS_HEX",
                    "email": "usuario@email.com",
                    "newPassword": "minhanovasenha123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "✅ Senha redefinida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                },
                "examples": {
                  "senha_redefinida": {
                    "summary": "Redefinição bem-sucedida",
                    "value": {
                      "message": "Senha redefinida com sucesso! Faça login com a nova senha."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "❌ Dados inválidos ou token expirado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "campos_obrigatorios": {
                    "summary": "Campos obrigatórios não fornecidos",
                    "value": {
                      "message": "Token, email e nova senha são obrigatórios"
                    }
                  },
                  "token_invalido": {
                    "summary": "Token inválido ou expirado",
                    "value": {
                      "message": "Token inválido ou expirado"
                    }
                  },
                  "senha_fraca": {
                    "summary": "Senha não atende aos requisitos",
                    "value": {
                      "message": "Nova senha deve ter pelo menos 6 caracteres"
                    }
                  },
                  "email_invalido": {
                    "summary": "Formato de email inválido",
                    "value": {
                      "message": "Formato de email inválido"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "❌ Operação não permitida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "admin_bloqueado": {
                    "summary": "Tentativa de reset para conta admin",
                    "value": {
                      "message": "Não é possível redefinir senha da conta administrativa"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "❌ Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health/email": {
      "get": {
        "tags": ["Sistema"],
        "summary": "📧 Verificação do serviço de email",
        "description": "Verifica se o serviço de email (Mailtrap/Ethereal) está funcionando corretamente",
        "responses": {
          "200": {
            "description": "✅ Serviço de email funcionando",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailHealthResponse"
                },
                "examples": {
                  "mailtrap_ok": {
                    "summary": "Mailtrap funcionando",
                    "value": {
                      "status": "OK",
                      "email_service": "enabled",
                      "provider": "mailtrap",
                      "details": {
                        "provider": "mailtrap",
                        "isMailtrap": true,
                        "isTest": false,
                        "fromEmail": "noreply@mathkids.com",
                        "fromName": "MathKids - Educação Infantil",
                        "hasTransporter": true
                      },
                      "timestamp": "2025-10-01T17:30:00.000Z"
                    }
                  },
                  "ethereal_fallback": {
                    "summary": "Usando Ethereal (fallback)",
                    "value": {
                      "status": "OK",
                      "email_service": "enabled", 
                      "provider": "test",
                      "details": {
                        "provider": "test",
                        "isMailtrap": false,
                        "isTest": true,
                        "fromEmail": "MathKids@exemplo.com",
                        "fromName": "MathKids - Educação Infantil",
                        "hasTransporter": true
                      },
                      "timestamp": "2025-10-01T17:30:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "❌ Serviço de email com problemas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErroResponse"
                },
                "examples": {
                  "email_falhou": {
                    "summary": "Falha no serviço de email",
                    "value": {
                      "status": "ERROR",
                      "email_service": "failed",
                      "error": "SMTP connection failed",
                      "timestamp": "2025-10-01T17:30:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistroRequest": {
        "type": "object",
        "required": [
          "nomeDoResponsavel",
          "email",
          "senha",
          "dataDeNascimento",
          "termosAceitos"
        ],
        "properties": {
          "nomeDoResponsavel": {
            "type": "string",
            "description": "Nome completo do responsável/pai da criança",
            "example": "Maria Silva Santos",
            "minLength": 2,
            "maxLength": 255,
            "pattern": "^[A-Za-zÀ-ÿ\\s]+$"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email único do responsável (usado para login)",
            "example": "maria.santos@email.com",
            "maxLength": 255
          },
          "senha": {
            "type": "string",
            "description": "Senha do usuário (será criptografada com bcrypt)",
            "example": "minhasenhasegura123",
            "minLength": 6,
            "maxLength": 100
          },
          "dataDeNascimento": {
            "type": "string",
            "format": "date",
            "description": "Data de nascimento do responsável no formato YYYY-MM-DD",
            "example": "1985-03-15"
          },
          "termosAceitos": {
            "type": "boolean",
            "description": "Confirmação obrigatória de aceitação dos termos de uso",
            "example": true,
            "enum": [true]
          }
        }
      },
      "RegistroSucessoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de confirmação do registro",
            "example": "Usuário registrado com sucesso!"
          },
          "user": {
            "$ref": "#/components/schemas/UsuarioResponse"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "senha"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário registrado",
            "example": "maria.santos@email.com"
          },
          "senha": {
            "type": "string",
            "description": "Senha do usuário",
            "example": "minhasenha123",
            "minLength": 3
          },
          "rememberMe": {
            "type": "boolean",
            "description": "Manter usuário logado",
            "example": false,
            "default": false
          }
        }
      },
      "LoginSucessoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de confirmação do login",
            "example": "Login realizado com sucesso!"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID do usuário",
                "example": 1
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Email do usuário",
                "example": "maria.santos@email.com"
              },
              "nome": {
                "type": "string",
                "description": "Nome do usuário",
                "example": "Maria Silva Santos"
              },
              "tipo": {
                "type": "string",
                "description": "Tipo de usuário",
                "example": "usuario",
                "enum": ["usuario", "admin"]
              }
            }
          },
          "token": {
            "type": "string",
            "description": "Token de autenticação",
            "example": "token_1_1642234567890"
          },
          "rememberMe": {
            "type": "boolean",
            "description": "Se o usuário escolheu ser lembrado",
            "example": true
          }
        }
      },
      "UsuarioResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do usuário no banco PostgreSQL",
            "example": 42
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário registrado",
            "example": "maria.santos@email.com"
          },
          "nome_responsavel": {
            "type": "string",
            "description": "Nome do responsável cadastrado",
            "example": "Maria Silva Santos"
          }
        }
      },
      "ErroResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Descrição detalhada do erro ocorrido",
            "example": "Erro: Todos os campos são obrigatórios, incluindo a aceitação dos termos."
          }
        }
      },
      "CriancaProfile": {
        "type": "object",
        "description": "Perfil da criança (implementação futura)",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "nome": {
            "type": "string",
            "example": "João Pedro"
          },
          "idade": {
            "type": "integer",
            "minimum": 3,
            "maximum": 9,
            "example": 6
          },
          "nivel_matematica": {
            "type": "string",
            "enum": ["iniciante", "basico", "intermediario"],
            "example": "basico"
          },
          "responsavel_id": {
            "type": "integer",
            "example": 42
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status do servidor",
            "example": "OK",
            "enum": ["OK"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp ISO 8601 da verificação",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "service": {
            "type": "string",
            "description": "Nome do serviço",
            "example": "MathKids API"
          }
        },
        "required": ["status", "timestamp", "service"]
      },
      "DatabaseHealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status da conexão com banco",
            "example": "OK",
            "enum": ["OK", "ERROR"]
          },
          "database": {
            "type": "string",
            "description": "Status da conectividade",
            "example": "connected",
            "enum": ["connected", "disconnected"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp da verificação",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "query_time": {
            "type": "string",
            "description": "Tempo de resposta da consulta de teste",
            "example": "12ms"
          },
          "error": {
            "type": "string",
            "description": "Mensagem de erro (apenas em caso de falha)",
            "example": "Connection timeout"
          }
        },
        "required": ["status", "database", "timestamp"]
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário que esqueceu a senha",
            "example": "usuario@email.com"
          }
        }
      },
      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem padrão (sempre a mesma por segurança)",
            "example": "Se este email estiver cadastrado, você receberá instruções para redefinir sua senha."
          },
          "resetAvailable": {
            "type": "boolean",
            "description": "Indica se o reset está disponível (apenas em dev)",
            "example": true
          },
          "emailSent": {
            "type": "boolean",
            "description": "Indica se o email foi enviado (apenas em dev)",
            "example": true
          },
          "devInfo": {
            "type": "object",
            "description": "Informações de desenvolvimento (apenas em NODE_ENV=development)",
            "properties": {
              "resetToken": {
                "type": "string",
                "description": "🎯 Token de reset (64 chars hex) - USE ESTE NO /api/reset-password",
                "example": "abc123def456...Token64CharsHex...789012345678901234567890abcdef123456",
                "minLength": 64,
                "maxLength": 64
              },
              "resetLink": {
                "type": "string",
                "description": "Link completo de reset (apenas em dev)",
                "example": "http://localhost:5000/cadastro/reset-password.html?token=abc123...&email=user%40email.com"
              },
              "testMode": {
                "type": "boolean",
                "description": "Indica se está em modo de teste",
                "example": true
              },
              "provider": {
                "type": "string",
                "description": "Provedor de email usado",
                "example": "mailtrap",
                "enum": ["mailtrap", "ethereal", "test"]
              },
              "previewUrl": {
                "type": "string",
                "description": "URL para preview do email (Ethereal)",
                "example": "https://ethereal.email/message/abc123"
              }
            }
          }
        },
        "required": ["message"]
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": ["token", "email", "newPassword"],
        "properties": {
          "token": {
            "type": "string",
            "description": "Token de reset recebido por email (64 caracteres hexadecimais)",
            "example": "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456",
            "minLength": 64,
            "maxLength": 64,
            "pattern": "^[a-f0-9]{64}$"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário (deve corresponder ao token)",
            "example": "usuario@email.com"
          },
          "newPassword": {
            "type": "string",
            "description": "Nova senha (6-128 caracteres)",
            "example": "minhanovasenha123",
            "minLength": 6,
            "maxLength": 128
          }
        }
      },
      "ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de confirmação",
            "example": "Senha redefinida com sucesso! Faça login com a nova senha."
          }
        },
        "required": ["message"]
      },
      "EmailHealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status do serviço de email",
            "example": "OK",
            "enum": ["OK", "UNHEALTHY", "ERROR"]
          },
          "email_service": {
            "type": "string",
            "description": "Estado do serviço",
            "example": "enabled",
            "enum": ["enabled", "failed"]
          },
          "provider": {
            "type": "string",
            "description": "Provedor de email ativo",
            "example": "mailtrap",
            "enum": ["mailtrap", "test"]
          },
          "details": {
            "type": "object",
            "description": "Detalhes do provedor de email",
            "properties": {
              "provider": {
                "type": "string",
                "example": "mailtrap"
              },
              "isMailtrap": {
                "type": "boolean",
                "example": true
              },
              "isTest": {
                "type": "boolean",
                "example": false
              },
              "fromEmail": {
                "type": "string",
                "example": "noreply@mathkids.com"
              },
              "fromName": {
                "type": "string",
                "example": "MathKids - Educação Infantil"
              },
              "hasTransporter": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp da verificação",
            "example": "2025-10-01T17:30:00.000Z"
          },
          "error": {
            "type": "string",
            "description": "Mensagem de erro (apenas em caso de falha)",
            "example": "SMTP connection failed"
          }
        },
        "required": ["status", "email_service", "timestamp"]
      },
      "ApiStatusResponse": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "description": "Nome da API",
            "example": "MathKids API"
          },
          "status": {
            "type": "string",
            "description": "Status geral da API",
            "example": "online",
            "enum": ["online", "degraded", "offline"]
          },
          "endpoints": {
            "type": "object",
            "description": "Lista de endpoints principais disponíveis",
            "properties": {
              "register": {
                "type": "string",
                "example": "/api/register"
              },
              "login": {
                "type": "string",
                "example": "/api/login"
              },
              "forgot_password": {
                "type": "string",
                "example": "/api/forgot-password"
              },
              "reset_password": {
                "type": "string",
                "example": "/api/reset-password"
              },
              "docs": {
                "type": "string",
                "example": "/api-docs"
              },
              "health": {
                "type": "string",
                "example": "/health"
              }
            }
          },
          "database": {
            "type": "string",
            "description": "Status da conexão com banco de dados",
            "example": "connected",
            "enum": ["connected", "not configured", "disconnected"]
          },
          "email_service": {
            "type": "object",
            "description": "Informações do serviço de email",
            "properties": {
              "provider": {
                "type": "string",
                "example": "mailtrap"
              },
              "isMailtrap": {
                "type": "boolean",
                "example": true
              },
              "isTest": {
                "type": "boolean",
                "example": false
              },
              "fromEmail": {
                "type": "string",
                "example": "noreply@mathkids.com"
              },
              "fromName": {
                "type": "string",
                "example": "MathKids - Educação Infantil"
              },
              "hasTransporter": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp da consulta",
            "example": "2025-10-01T17:30:00.000Z"
          }
        },
        "required": ["api", "status", "timestamp"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT para autenticação (implementação futura para login)"
      }
    }
  },
  "security": [],
  "externalDocs": {
    "description": "📚 Documentação completa do MathKids no GitHub",
    "url": "https://github.com/abe-karin/mathkids/blob/main/README.md"
  }
}